version: '3'

services:
  postgresql:
    image: postgres:15
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secretpass
      - POSTGRES_DB=predictor
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - predictor-network
    # Добавляем healthcheck для проверки готовности PostgreSQL
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  tgbot:
    build:
      context: .
      dockerfile: Dockerfile
      target: tgbot
    restart: on-failure  # Изменено с "always" на "on-failure"
    environment:
      - TZ=UTC
    env_file:
      - .env
    networks:
      - predictor-network
    depends_on:
      postgresql:
        condition: service_healthy  # Изменено: ждём пока PostgreSQL не будет готов

  webhook:
    build:
      context: .
      dockerfile: Dockerfile
      target: webhook
    restart: on-failure  # Изменено с "always" на "on-failure"
    ports:
      - "8081:8080" # HTTPS сервер (самоподписанный сертификат)
    environment:
      - TZ=UTC
      - USE_HTTPS=true
      - SERVER_IP=168.231.87.153
    env_file:
      - .env
    volumes:
      - ./certs:/app/certs  # Монтируем директорию для сертификатов
    networks:
      - predictor-network
    depends_on:
      postgresql:
        condition: service_healthy  # Изменено: ждём пока PostgreSQL не будет готов

volumes:
  postgres_data:

networks:
  predictor-network:
    driver: bridge