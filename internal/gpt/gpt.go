package gpt

//
//import (
//	"github.com/Alias1177/Predictor/models"
//	"context"
//	"fmt"
//	"github.com/rs/zerolog/log"
//	"github.com/sashabaranov/go-openai"
//	"strings"
//)
//
//func FormatPrompt(candles []models.Candle, symbol string) string {
//	var sb strings.Builder
//	sb.WriteString(fmt.Sprintf("–ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–≤–µ—á–µ–π –ø–æ %s:\n", symbol))
//	start := len(candles) - 15
//	if start < 0 {
//		start = 0
//	}
//	for i := start; i < len(candles); i++ {
//		c := candles[i]
//		sb.WriteString(fmt.Sprintf("%s: %.5f ‚Üí %.5f\n", c.Datetime, c.Open, c.Close))
//	}
//	sb.WriteString(`
//–ù–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–∏—Ö –¥–∞–Ω–Ω—ã—Ö —Å–∫–∞–∂–∏, –∫—É–¥–∞ –ø–æ–π–¥—ë—Ç –≥—Ä–∞—Ñ–∏–∫ –≤ –±–ª–∏–∂–∞–π—à–∏–µ 5 –º–∏–Ω—É—Ç, –≤–≤–µ—Ä—Ö –∏–ª–∏ –≤–Ω–∏–∑.
//–û—Ç–≤–µ—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
//–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –≤–≤–µ—Ä—Ö/–≤–Ω–∏–∑
//–ü–æ—è—Å–Ω–µ–Ω–∏–µ: <1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è>
//`)
//	return sb.String()
//}
//
//// askGPT —à–ª—ë—Ç prompt –≤ OpenAI –∏ –ø–µ—á–∞—Ç–∞–µ—Ç –æ—Ç–≤–µ—Ç
//func AskGPT(openaiKey, prompt string) {
//	client := openai.NewClient(openaiKey)
//	resp, err := client.CreateChatCompletion(
//		context.Background(),
//		openai.ChatCompletionRequest{
//			Model: openai.GPT4,
//			Messages: []openai.ChatCompletionMessage{
//				{Role: openai.ChatMessageRoleUser, Content: prompt},
//			},
//		},
//	)
//	if err != nil {
//		log.Error().Err(err).Msg("OpenAI error")
//		return
//	}
//	fmt.Println("üìà –û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏:\n", resp.Choices[0].Message.Content)
//}
//func ProcessGPT(ctx context.Context, openaiKey, prompt string) (string, error) {
//	client := openai.NewClient(openaiKey)
//	resp, err := client.CreateChatCompletion(
//		ctx,
//		openai.ChatCompletionRequest{
//			Model: openai.GPT4,
//			Messages: []openai.ChatCompletionMessage{
//				{Role: openai.ChatMessageRoleUser, Content: prompt},
//			},
//		},
//	)
//	if err != nil {
//		log.Error().Err(err).Msg("OpenAI error")
//		return "", err
//	}
//
//	return resp.Choices[0].Message.Content, nil
//}
