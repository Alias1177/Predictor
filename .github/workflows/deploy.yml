name: Deploy Forex Predictor Bot

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Create .env file
        run: |
          # Используем секрет ENV напрямую
          echo "${{ secrets.ENV }}" > .env
          echo ".env file created successfully"
          ls -la .env

      # Добавьте секреты SSH_USER и SSH_HOST в ваш репозиторий,
      # или временно используйте хардкодированные значения ниже

      # Используем actions для SSH с хардкодированными значениями
      - name: Set up deployment directory on server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: 168.231.87.153  # Замените на ${{ secrets.SSH_HOST }} после добавления секрета
          username: root        # Замените на ${{ secrets.SSH_USER }} после добавления секрета
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p /root/predictor
            echo "Directory created/verified: /root/predictor"

      # Используем actions для копирования файлов
      - name: Copy files to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: 168.231.87.153  # Замените на ${{ secrets.SSH_HOST }} после добавления секрета
          username: root        # Замените на ${{ secrets.SSH_USER }} после добавления секрета
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ".,.env,*,.*"
          target: "/root/predictor"
          rm: false

      # Проверка Docker и Docker Compose, затем запуск
      - name: Deploy application
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: 168.231.87.153  # Замените на ${{ secrets.SSH_HOST }} после добавления секрета
          username: root        # Замените на ${{ secrets.SSH_USER }} после добавления секрета
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /root/predictor
            
            # Проверка Docker
            if ! command -v docker &> /dev/null; then
              echo "Docker not found. Installing Docker..."
              apt update
              apt install -y apt-transport-https ca-certificates curl software-properties-common
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
              add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
              apt update
              apt install -y docker-ce docker-ce-cli containerd.io
            else
              echo "Docker is installed. Version: $(docker --version)"
            fi
            
            # Проверка Docker Compose
            if ! command -v docker-compose &> /dev/null; then
              echo "Docker Compose not found. Installing Docker Compose..."
              curl -L "https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              chmod +x /usr/local/bin/docker-compose
            else
              echo "Docker Compose is installed. Version: $(docker-compose --version)"
            fi
            
            # Остановка существующих контейнеров
            echo "Stopping existing containers..."
            docker-compose down || true
            
            # Сборка и запуск
            echo "Building Docker images..."
            docker-compose build --no-cache
            
            echo "Starting containers..."
            docker-compose up -d
            
            echo "Checking running containers..."
            docker-compose ps
            
            echo "Checking container logs..."
            docker-compose logs --tail 20
            
            echo "Deployment completed successfully!"

      # Опциональная настройка вебхука для Telegram
      - name: Set up Telegram webhook
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: 168.231.87.153  # Замените на ${{ secrets.SSH_HOST }} после добавления секрета
          username: root        # Замените на ${{ secrets.SSH_USER }} после добавления секрета
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Извлекаем токен бота из .env файла
            TELEGRAM_BOT_TOKEN=$(grep TELEGRAM_BOT_TOKEN /root/predictor/.env | cut -d= -f2)
            
            # Используем IP-адрес для webhook (для тестирования)
            echo "Setting up Telegram webhook..."
            curl -F "url=http://168.231.87.153:8080/webhook" https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/setWebhook
            echo "Webhook setup completed"